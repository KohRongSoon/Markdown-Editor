{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","markdown","input","convertedMarkdown","replace","className","value","onChange","e","target","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAyBeA,MArBf,WACE,MAAyBC,mBAAU,kDAAnC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAoBF,EAASG,QAAQ,qBAAsB,aAAaA,QAAQ,iBAAkB,aAAaA,QAAQ,WAAY,aAAaA,QAAQ,WAAY,iBAAiBA,QAAQ,MAAO,QAE1M,OACE,sBAAKC,UAAU,MAAf,UACE,iDACA,sBAAKA,UAAU,QAAf,UACE,sCACA,0CAEA,sBAAKA,UAAU,QAAf,UACC,0BAAWC,MAASL,EAAUM,SAAU,SAAAC,GAAC,OAAIN,EAAMM,EAAEC,OAAOH,QAA5D,eACC,qBAAKD,UAAU,SAAf,SACE,4BAAIK,YAAMP,cCJPQ,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.88669771.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport parse from 'html-react-parser';\nimport './App.css';\n\nfunction App() {\n  const [markdown,input] = useState (\"***Italic***\\n**Bold**\\n_Underline_\\n~Striped~\");\n  const convertedMarkdown = markdown.replace(/\\*\\*\\*(.+?)\\*\\*\\*/g, '<i>$1</i>').replace(/\\*\\*(.+?)\\*\\*/g, '<b>$1</b>').replace(/_(.+?)_/g, '<u>$1</u>').replace(/~(.+?)~/g, '<del>$1</del>').replace(/\\n/g, \"<br>\");\n  \n  return (\n    <div className=\"App\">\n      <h1>Markdown Editor</h1> \n      <div className=\"Title\">    \n        <p>Input</p>\n        <p>Result</p>\n      </div>\n        <div className=\"Input\">\n         <textarea  value = {markdown} onChange={e => input(e.target.value)} > </textarea>\n          <div className=\"Result\">\n            <p>{parse(convertedMarkdown)}</p>\n          </div>\n      </div>\n    </div>       \n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}